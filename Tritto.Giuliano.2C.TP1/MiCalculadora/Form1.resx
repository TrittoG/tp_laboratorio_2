<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEACACoCAAAJgAAACAgAAABACAAqBAAAM4IAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAA
        AAAAAAAAAAAAAAABAAAAAAAAAAAAAP///wAA//8A/wAAAACAgACAgAAAAIAAAIAAgACAgIAAgAAAAACA
        /wCA//8AQCDgAIAggABg4GAAYABgAMBgoABgoGAAIGCAACCAoACAoKAAYGAAAIDAIABg4CAAICBgAGBA
        oADgoOAAYIBAAMCgYADgwIAAAOCAACAAgABggKAAoKCgAIDAoADg4KAAAOCgACAAoABgoMAA4ODAAGCg
        AACAoAAAgGAgAECgIACAoCAAAMAgAGDAIABA4CAAAAAgAKAAIACgICAAYMBAAGDgQAAgAEAA4EBAAEDg
        YACAIGAAoCBgAABAYABgIIAAYECAAKBAgACgYIAAgCCgAIBAoACgYKAA4GCgAACAoABgYMAAIKDAAAAg
        4ABgoOAAoKDgAODg4ABg4P8AYP//AKD//wAACAgAAAAIAECYyAAICAgAKBh4ACgYgACQgEgASGigAFi4
        2AAIAAAAMEgoAEBYMAA4WDgAeGg4ADhYSACIgFAAaMDgALjw/wAIEBgAOFA4ADhYQABAaGAAIBBoACAY
        aAAoIIAAKGiQADB4mAAweKAASJCgAChoqAAwaKgAOHioACiAqABAgKgAOIiwAFiguAA4oMAASKDAAECQ
        yAAooMgAeLDIAECo0ABQuNgAaMDYABggIAAoOCAAECAoABggKAAgKDAAOFAwADhYMABAYDgAQFhAAGhg
        QABwaEAAeHBAAIB4QACAeEgAmIhIAEBYUAAYGFgASGhYAIiAWABgaGAAaGhgAGhwYAAgIGgAaGhoAEhw
        aAAoKHgAMHiAADAgiAAwKIgAKGCIAChoiABYgIgAMGiQADA4mAAgUJgAMGCYADBwmAAoeJgAaIiYAChY
        oAAoYKAAMGigAEBooAB4kKAAWJigACCAqAA4gKgAOIioAEiQqABQkKgAOGiwADh4sAAoiLAAMIiwAEiY
        sAAweLgAOHi4AECIuAAwkLgASJC4ACiYuAA4iMAAKJjAAFigwAAokMgAQKDIAFioyAA4qNAAOKjYAGCw
        2ABguNgAgNDoAKDY6ABgyPAAiNDwAJjg8ABw2PgA2P//APj//wAYCAAASEAAAABIAAD/AAgAEAgIAAgI
        EAAAEBgAQCgYACg4GAAwSBgAABggAAgYIAAgOCAAMEggAAAYKAAAICgAGCgoACAoKAA4MCgAKDgoADhA
        KAA4UCgACCAwABgwMAB4YDAAkHgwAAAoOAAQKDgAMDA4AEBYOABoWDgAkHg4AP+IOAAQOEAAGDhAADhA
        QAA4UEAAUFhAAGhoQAB4aEAAiHhAAAAwSAAIMEgAIEBIADhISAA4YEgAUGhIAHhoSABwcEgAeHBIAIBw
        SACIeEgAiIBIAJiASACQiEgAoJBIAAAAAAAAAAAAAAAAAAAAAIh9UAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAFAAqhQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJHAxaTaAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAADpXbuvxcQUzADpAAAAAAAAAAAAAAAAAAAAAAAAAADiaXKeqoiLu8LBkADpAAAAAAAA
        AAAAAAAAAAAAAADxl79Vb2i+Yu9cFHddIcgAAAAAAAAAAAAAAAAAAHtWpHe8bZ5vsr6IWoZTi6VVdYif
        nwAAAAAAAAAAAACqcq1Vcm2nc0+0u4hahfxT/YtpvHbDCAAAAAAAAAAAaXWns7Ntc09PT3O+iFqFU1NT
        +1wIjpjFkAAAAAAAAJ67Zmistnawtk9Pc3iKWoZTU4yNjPmH56XD7QAAAAClxGeWb6CgaptPT09zXYzh
        U4eNYv9cllxc4KXDkQAAALe4EmanaqybsHZzc3O5jPmQi46Wi42WhvmCl7eTAAAAdl1wZminoqtPsWuc
        sbCrq7Cgi5BikZCE96WtZgAAAAAAdL9uZ52cbG+cpmacsWy1pqKOhfj4hIJ1vgAAAAAAAAAAeLhmZpdm
        Z5mWBBNUl0Ojq42Dg+7mmMWIAAAAAAAAAAAAumwSEpaZnZadRRJFrKKgjIOC5u13dQAAAAAAAAAAAAAA
        u6pncHi0aploQxJtraevdXUmqsL0AAAAAAAAAAAAAABxtBgSoWujZ5mmQwSctpP1EpO1ZwAAAAAAAAAA
        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
        wP8/lsb+P5bH/z2Wxf8/ksT/Y7DV/0FWU/96aDf/gnVC/4x+Rv+PgUn+kYRL/4h4Sf+LfU79bIp2/3N6
        Wf1NjI39cMzu/l5qc6IAAABiBAgKJgABAgAAkfABpqm/AFl+iA4pe5e3TanJ/ytpjPsteKT9NHmy/TiG
        vv5Doc/+Mnq2/jqNwP8/mMf/PZXF/0CSw/9vu9v/SV1Z/3tqOP+DeEX/jH5H/5ODR/9gZGP+aGxh/mFm
        Y/98cFD+modH/491OP1WmJz9htf2+VBMT5cAAABlBgoLMLTt/gH29PYAYI+ne5bd9P88dpT8I2KI/jeJ
        sf8kVp3+Jlqg/ytuq/8iU5r/PpbJ/z+bzP8/mcr/PpPI/2q94f9VaF7/jXQy/45+Q/+ZiUj/amxe/0RT
        b/+hj0f/i4BR/zZKc/+GfVH+hn1O/3hiLv1Rl6L+jszj7kpga4kWHB02UJW5AB1lmTswmb//V6LB/CFe
        g/0sbZL/N4Oo/ixtpv8uc67/IFOa/zB4tv9FotP/QIvI/z+T0f89k8r/LJPF/15wZ/94bkv/Z21t/4V8
        WP9wcWP/RVd9/4R9WP9pa2P/P1N//nx2Uf58c0b/aF4+/SV0iP8nmMH/PGR8gwlUXwkvos4BQ7TPJ0it
        z8Njvdz/XJK1/CNrk/4yeJ7/NYOs/i9io/84ZKz/O5bJ/zh7vv8zZar/LV+X/zhzvf8qarn/OWyu/ztp
        sf8rbL3/Llij/395Wv9hZ2n/Pk90/0lZev9ma2v/fXNA/3ZrSf1Ylqr/Jo616yJumHQAAAALEEJPC///
        /wEvveQALLPgAC2jzpFhudn/P4Kq+i91nP4vc5r/LGSZ/jd3qP80hLH/N2Gb/xuJqP8hcZL/PF+S/zl4
        uP85bqb/HY67/yKCpf8wZZ3/bHdu/4R3Qv9zbkz/c21L/3hwQ/5sYkD9ebPC/mCz09kLLkc/AAAAAAAZ
        HwQQSFMAR9H7AABFAAGY4fEAlOPvAGTB2Z9VoMb/KGeX+ytsjf4qaYj+LG6O/y90mP8wY5D/KmOE/wxy
        iv8RgaH/RGqf/xdxif8GepH/Pmqe/zNttv9laWH/dGw//25nP/5qZkH+XlMw/WCEh/2A3f76M05gVQNa
        mQ4IEhQKByMsAAAAAAAAAAAAduv/APr//wBkxNoAfdbgBz2hy8s3eKj/I16C/Cdcf/8oY4b+LmqQ/i5t
        nf4zWIn+LG2W/wO42v8XYYD/FprD/zV2rv84baL/MFuk/2FgXf9xaEP/Z19B/mVaO/9SVUP8ULbX/3Ws
        xLOc//8hFy0yEgAAAAAAAAAAAAAAAAAAAAAAAAAAuff/AF3J7QFOt9UAeLzTJFywzeZYlq79PYCW/WGg
        tf9rt83/UI64/ylqpv8xZ47/Knag/w2Srf8fZYf/JX6o/ySIsf8xfa3/PJWz/3qzyP94s8f/cqW1/U6T
        qf5jxujzM0NOUQkTFBsTIykIAAAAAAAAAAAAAAAAAAAAAAAAAACu8/8AUsXpACacxAJc5v8ANp6/gEKP
        s/4UM2P6HUd5/ihgnf4uZaj+PWuj/i10mf8/YY//H4Ol/wCVsP8BfJD/L2KY/zaEw/8veX7/Il5d/yVk
        Zf4veoP7JpW6/zN5lqeEzOwlBhIVHAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcyu8AFJG8Ax7i
        +QAZkK1pNHyr/yULX/siEWz+Jwpv/i86lv4ciLz+F3qu/yRqqv8Dnb7/B5K2/wZPa/8Vapb/NGK1/zZK
        RP9AWSz/P1Uw/TxUOP06kq78FEFZZAAAACsABAYgAAQFCwAEBQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAAHBefbChFqfD1Jk7X1JyBr/h8Ta/0mF3b+MUif/hF6sP4ka6v/HHOx/wCgwf8AXJD/JV2d/xVv
        ov8mbLf/OFty/zxaMP88Wj3+Q2RS/1ihuPMYHiRWAAAARQADBDgABAUdAAQFDAAEBQEAAAAAAAAAAAAA
        AAAAAAAAAAQFBgMBABQGAAApQCYXQVuht+EaImj/PU6P/CUWdv0xOJL+N3a5/TeAwv8scbL/Loi1/zyD
        pv8hWIr/Lmqk/zBvsf86Wkj/PFgu/zpUL/1Jb2X+WaLB4wAAAFsAAABkAAQFYAAEBT8ABAUfAAQFCQAA
        AAEAAAAAAAAAAAMNFQIABAQSAAAJMwAAAFIhKyxwSJCo8hcbWv5IZ5/9Jxp6/igXf/8wOZT+MD+X/yYp
        gv9erdX/ncG+/yA1I/82VkX/O1pC/0VqV/9Calz/RmdX/El7cv81iqrOLy00coOgrtsUHB+PAAAAZgAD
        BDwABAUaAAQFCAAAAAAAY/8BCBYcDhRPZx0aR12FVnmR4RYdJ6Evd5P6GBZW/0Vqof47U5j+LyqI/igT
        ff4pFX7/IhBx/yuCsv81eIH/JTUY/y5EGv88W0D/UYGO/zpYL/9UgYv9QXyI/xl2lehVkavlwer4/yEm
        KqsAAACEAAQFYQADBDAABAUTO6nOAAYAAAUDCAUWAAAINyt2ksdbqML/SZGq9htYdvwfHGP+Rmih/S0n
        hv4qHYL+KBt+/igdfP8gGHD/JGqT/xJMVv8lNx7/LEUr/zZRLv9Dal3/RG5n/0FoWv87YEv/N5/C/zuf
        v/9EoL/8rtTh8zY8QaUAAABmAgcIPwAAABoAWoQAME99BwAAABJCiKGuue7+/2m/3ftRt9D/Ol+M/iET
        af1JZqP9Jxd8/iYWev4lG3b+JBxy/yAUZv42eKD7I1lj/SY4H/8uRSf+M00v/lSFlv8+YEz/S3h5/kJc
        P/9aoav+KJzG/SmFnv1ZtND/t9/r9khOVngAAAAyIiIhGhKMswUApe8ACmWSYmm/2f+34+760fz//X3P
        6v0nKHT+Jxx2/lJ2rP4yOor+LjGA/iIUav0hEWT8GRBe/zOGrv9Jj6D/KTsl+yxBIfsvRyb9OllE/z1j
        XP5CaWL/N1Y6/k5rVf9autv+JJ/I/CeVtvlmvtj/S4idl////xIdQEoVXcXaA3Ds8gBFncPVMJ7B/w16
        nP9Fq8T/IkV//SMQcf4oHXz9LCx//ispeP4iHWn8HCNr/yRKgv8+gaf7fMTUpHHE3+hFi5n/PmNd/ztW
        RP8wRyb8M00t/jRQM/84VT3/NlQ4/ldxWP1Wobf/Pq7X/CmVvuFDjqpavfv/AhVngwq18/8C3/f1AJ7W
        5GVfq9G8J53O4SFJjfwoEnj/Jxp++yYZef4hCGb9Hhdp+y9qnf9aqcX3g8rdqorU4TqS7OkAU63AHVCt
        zoQ+qM+gSZe340l6hP86U0P/NFA0/DRRNf05WD7+OVg4/09lSppad1wsQ2A4DgAAAADb/f8CGExcALfy
        /wD1//8AAmuuACwmfQA1L3YKPC6QTDIhh+0pFHz/Ig9w+hsrcv9Aibn/ecvivLTJ0i69srQA/4s7ALj/
        /wOIz+gAWK/KADKgyAAdosEmPKrQvUWPtPs8ZnP/RGFN/zhQNfo3QCZunbxiADBKIgBKPwAA1d3jAOn/
        /wAAAAAAc9T0ALL//wBnvNwCLiCEAAAAAAArSZYAIVGOIyg1kNtHaqr/fdHl8Z7Y6nB1k58I1tPRAP//
        /wLX//8Bpv//AAAAAAFbt9UCcrDOAgD//wAzzO4ALbjiJzan1qRVsM74RICdzhO7wgKBv9AFO1g5Aj9e
        OwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACaazQMefr0AK4XBMzajx5pDlsBUZMHjABaF
        rgXt7/ACAAAAAAAAAAAAAAAAAAAAAFu21AAUqt0AF8LVAQrc9gE6eaQAAFpUAACJvCIrk8UbJtPfAznV
        +wE6UygAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKI/GABh9vwQmgsIAU8ztAGm1
        3ACj6v4IInqZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAC6PvwQCanEEAJbUADKI
        sQAn1+AAOMLpAAAAAAAAAAAAAAAAAAAAAAAAAAAA//4////4H///8Af//+AB///AAP//AAA//AAAH/gA
        AA/wAAAD4AAAAcAAAAHAAAABwAAAA+AAAA/wAAAP+AAAH/wAAB/8AAA//AAAP/4AAD/+AAAP+AAAB/AA
        AAPwAAAD4AAAA8AAAAPAAAADwAOAH/wP8D/+H/x//z////////8=
</value>
  </data>
</root>